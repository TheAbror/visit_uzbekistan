import 'package:visit_uzbekistan/widget_imports.dart';

ThemeData lightTheme() {
  return ThemeData(
    // fontFamily: FontFamily.lato, //TODO
    colorScheme: ColorScheme.light(
      primary: AppColors.primary,
      background: NewColorsLight.bgPage2,
      onBackground: NewColorsLight.bgSurface1,
      surface: NewColorsLight.neutralContainerSoft.withOpacity(0.1),
      onSurface: AppColors.float,
      tertiary: AppColors.textMain,
      surfaceVariant: AppColors.float,
      onTertiary: const Color(0XFFF6F6F6),
      secondaryContainer: AppColors.iconSecondary,
      surfaceTint: AppColors.inputField,
      secondary: AppColors.backgroundModule,
      primaryContainer: AppColors.primary,
      tertiaryContainer: AppColors.signInTextColor,
      onTertiaryContainer: AppColors.backgroundModule,
      onSecondaryContainer: AppColors.marksSmallContainer,
      onSurfaceVariant: Colors.grey.shade300,
      inverseSurface: AppColors.stroke,
      outline: AppColors.float,
      onErrorContainer: AppColors.buttonDisabled,
      inversePrimary: AppColors.stroke,
      surfaceContainerLow: NewColorsLight.neutralOnContainer,
      scrim: NewColorsLight.bgSurface3,
      secondaryFixed: NewColorsLight.neutralContainerDefault,
      secondaryFixedDim: NewColorsLight.neutralOnContainer,
      primaryFixed: Color(0XFFA8A1B0).withOpacity(0.15),
      primaryFixedDim: NewColorsLight.accentDefault,
      onInverseSurface: NewColorsLight.accentOnaccent,
      errorContainer: NewColorsLight.errorDefault,
      onPrimary: NewColorsLight.fgDefault,
      onPrimaryContainer: NewColorsLight.fgDisabled,
      onError: NewColorsLight.errorOnerror,
      tertiaryFixed: NewColorsLight.fgSoft,
      tertiaryFixedDim: NewColorsLight.borderSoft,
      onTertiaryFixed: NewColorsLight.neutralDefault,
      onTertiaryFixedVariant: NewColorsLight.neutralOnNeutral,
      onPrimaryFixed: NewColorsLight.borderMuted,
      onPrimaryFixedVariant: NewColorsLight.fgMuted,
      onSecondary: NewColorsLight.accentMuted,
      onSecondaryFixed: NewColorsLight.accentOnContainer,
    ),
    textTheme: TextTheme(
      bodyLarge: TextStyle(fontSize: 15.sp, color: AppColors.textMain),
      bodyMedium: const TextStyle(color: AppColors.textMain),
      displayLarge: TextStyle(
        fontSize: 11.sp,
        color: AppColors.textSecondary,
        fontWeight: FontWeight.w500,
      ),
      displayMedium: const TextStyle(color: AppColors.textMain),
      displaySmall: TextStyle(
        fontSize: 13.sp,
        fontWeight: FontWeight.w500,
      ),
      headlineMedium: TextStyle(
        fontSize: 14.sp,
        fontWeight: FontWeight.w700,
        color: AppColors.textMain,
        overflow: TextOverflow.ellipsis,
      ),
      headlineSmall: TextStyle(
        fontSize: 15.sp,
        fontWeight: FontWeight.w500,
        color: AppColors.textMain,
      ),
      titleLarge: TextStyle(
        fontWeight: FontWeight.w700,
        fontSize: 16.sp,
        height: 1.2.h,
        color: const Color(0xFF333333),
      ),
    ),
  );
}

ThemeData darkTheme() {
  return ThemeData(
    // fontFamily: FontFamily.lato, //TODO
    colorScheme: ColorScheme.dark(
      primary: AppColors.primaryDark,
      background: NewColorsDark.bgPage2,
      onBackground: NewColorsDark.bgSurface1,
      surface: NewColorsDark.neutralContainerSoft.withOpacity(0.1),
      onSurface: AppColors.textMain,
      tertiary: AppColors.float,
      onTertiary: AppColors.textMain,
      surfaceVariant: AppColors.surface,
      secondaryContainer: AppColors.float,
      surfaceTint: AppColors.textMain,
      secondary: AppColors.textMain,
      primaryContainer: AppColors.float,
      tertiaryContainer: AppColors.float,
      onTertiaryContainer: AppColors.textMain,
      onSecondaryContainer: AppColors.textMain,
      onSurfaceVariant: AppColors.surface,
      inverseSurface: AppColors.textMain,
      outline: AppColors.onBackground,
      onErrorContainer: AppColors.onBackground,
      inversePrimary: AppColors.surface,
      surfaceContainerLow: NewColorsDark.neutralOnContainer,
      scrim: NewColorsDark.bgSurface3,
      secondaryFixed: NewColorsDark.neutralContainerDefault,
      secondaryFixedDim: NewColorsDark.neutralOnContainer,
      primaryFixed: Color(0XFFA8A1B0).withOpacity(0.15),
      primaryFixedDim: NewColorsDark.accentDefault,
      onInverseSurface: NewColorsDark.accentOnaccent,
      errorContainer: NewColorsDark.errorDefault,
      onPrimary: NewColorsDark.fgDefault,
      onPrimaryContainer: NewColorsDark.fgDisabled,
      onError: NewColorsDark.errorOnerror,
      tertiaryFixed: NewColorsDark.fgSoft,
      tertiaryFixedDim: NewColorsDark.borderSoft,
      onTertiaryFixed: NewColorsDark.neutralDefault,
      onTertiaryFixedVariant: NewColorsDark.neutralOnNeutral,
      onPrimaryFixed: NewColorsDark.borderMuted,
      onPrimaryFixedVariant: NewColorsDark.fgMuted,
      onSecondary: NewColorsDark.accentMuted,
      onSecondaryFixed: NewColorsDark.accentOnContainer,
    ),
    textTheme: TextTheme(
      bodyLarge: TextStyle(fontSize: 15.sp, color: AppColors.float),
      bodyMedium: const TextStyle(color: AppColors.float),
      displayLarge: TextStyle(
        fontSize: 11.sp,
        color: AppColors.float,
        fontWeight: FontWeight.w500,
      ),
      displayMedium: const TextStyle(color: AppColors.float),
      displaySmall: TextStyle(
        fontSize: 13.sp,
        color: AppColors.float,
        fontWeight: FontWeight.w500,
      ),
      headlineMedium: TextStyle(
        fontSize: 14.sp,
        fontWeight: FontWeight.w700,
        color: AppColors.float,
        overflow: TextOverflow.ellipsis,
      ),
      headlineSmall: TextStyle(
        fontSize: 15.sp,
        fontWeight: FontWeight.w500,
        color: AppColors.float,
      ),
    ),
  );
}
